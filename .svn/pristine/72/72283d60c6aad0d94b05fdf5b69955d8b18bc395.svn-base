package com.ync365.oa.web.employe;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.propertyeditors.CustomDateEditor;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.ServletRequestDataBinder;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ync365.commons.utils.CurrentUser;
import com.ync365.oa.entity.Department;
import com.ync365.oa.entity.Employe;
import com.ync365.oa.query.EmployeQuery;
import com.ync365.oa.service.account.ShiroDbRealm.ShiroUser;
import com.ync365.oa.service.department.DepartmentService;
import com.ync365.oa.service.employe.EmployeService;

@Controller
@RequestMapping(value="/admin/employe")
public class EmployeController {

	@Autowired
	private EmployeService employeService;
	
	@Autowired
	private DepartmentService departmentService;
	
	/***
	 * 页面列表
	 * @param model
	 * @return
	 */
	@RequestMapping(value="/list",method =RequestMethod.GET)
	public String list(EmployeQuery e,Model model){
		if(e.getPageIndex()==null){
			e.setPageIndex(0);
		}
		e.setPageSize(5);
		Page<Employe> employes =employeService.find(e);
		model.addAttribute("page",e);
		model.addAttribute("employes",employes);
		return "employe/employeList";
	}
	/***
	 * 导入员工的页面
	 * @return
	 */
	@RequestMapping(value="/addPage",method = RequestMethod.GET)
	public String addPage(Model model){
			List<Department> d=departmentService.getAll();
			model.addAttribute("dept",d);
			return "employe/addPage";
		}
	/***
	 * 导入员工
	 * @return
	 */
	@RequestMapping(value="/add",method = RequestMethod.POST)
	public String add(Employe e){
		String passwd=e.getEmail();
		String loginName=passwd.substring(0,passwd.indexOf('@'));
		passwd=loginName+"123";
		e.setLoginName(loginName);
		e.setPassword(passwd);
		e.setCreateTime(Calendar.getInstance().getTime());
		employeService.add(e);
		return "redirect:/admin/employe/list";
	}
	/***
	 * 编辑页面
	 * @param id
	 * @param model
	 * @return
	 */
	@RequestMapping(value="/editPage/{id}",method = RequestMethod.GET)
	public String editPage(@PathVariable int id,Model model){
		Employe e=employeService.findOne(id);
		model.addAttribute("employe",e);
		
		List<Department> d=departmentService.getAll();
		model.addAttribute("dept",d);
		
		return "employe/editPage";
	}
	
	@RequestMapping(value="/edit/{id}",method = RequestMethod.POST)
	public String edit(@PathVariable int id ,Employe e){
		Employe employe=employeService.findOne(id);
		employe.setName(e.getName());
		employe.setCode(e.getCode());
		employe.setEmail(e.getEmail());
		employe.setLoginName(e.getEmail().substring(0,(e.getEmail()).indexOf('@')));
		employe.setMobile(e.getMobile());
		employe.setDepartmentId(e.getDepartmentId());
		employe.setDepartmentName(e.getDepartmentName());
		employe.setIsMt(e.getIsMt());
		employe.setIsPm(e.getIsPm());
		employe.setCreateTime(Calendar.getInstance().getTime());
		employe.setEmploymentDate(e.getEmploymentDate());
		employeService.update(employe);
		return "redirect:/admin/employe/list";
	}
	/****
	 * 查看页面
	 * @param id
	 * @param model
	 * @return
	 */
	@RequestMapping(value="/view/{id}",method = RequestMethod.GET)
	public String selectById(@PathVariable int id,Model model){
		Employe e=employeService.findOne(id);
		model.addAttribute("employe",e);

		return "employe/employeForm";
	}
	/***
	 * 密码重置
	 * @param id
	 * @param model
	 * @return
	 */
	@RequestMapping(value="/passwdReset/{id}",method = RequestMethod.GET)
	public String passwdReset(@PathVariable int id,Model model){
		Employe e=employeService.findOne(id);
		if(e!=null){
			String passwd=e.getEmail();
			passwd=passwd.substring(0,passwd.indexOf('@'))+"123";
			e.setPassword(passwd);
			employeService.update(e);
		}
		return "redirect:/admin/employe/list";
	}
	
	
	@RequestMapping(value="/listAjax",method = RequestMethod.GET)
	@ResponseBody
    public List<Employe> listAjax(@RequestParam(value = "departmentId") Long departmentId){
        List<Employe> d=employeService.findByDepartmentId(departmentId);
        return d;
    }
	
	@InitBinder
    public void InitBinder(ServletRequestDataBinder bin) {
        bin.registerCustomEditor(Date.class, new CustomDateEditor( new SimpleDateFormat("yyyy-MM-dd"), true));
    }
	
}