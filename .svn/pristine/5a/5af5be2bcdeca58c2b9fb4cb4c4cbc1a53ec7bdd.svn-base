package com.ync365.oa.web.satisfaction;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.propertyeditors.CustomDateEditor;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.ServletRequestDataBinder;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.ync365.commons.utils.CloneUtils;
import com.ync365.oa.bo.SatisfactionBo;
import com.ync365.oa.entity.Satisfaction;
import com.ync365.oa.query.SatisfactionQuery;
import com.ync365.oa.service.properties.PropertiesService;
import com.ync365.oa.service.satisfaction.SatisfactionService;

@Controller
@RequestMapping(value = "/satisfaction")
public class SatisfactionController {
	
	@Autowired
	private SatisfactionService satisfactionServic;
	
	@Autowired
	private PropertiesService propertiesService;
	
	@RequestMapping(value = "/list/{id}" , method = RequestMethod.GET)
	public String list(Model model,@PathVariable Long id) {
		Long userId = 1l;
		List <Satisfaction> myEvaluateList = new ArrayList<Satisfaction>() ;//我评价的
		List<Satisfaction> myEvaluatedList = new ArrayList<Satisfaction>();//评价我的
		myEvaluateList = satisfactionServic.searchByEvaIdProId(userId,id);
		myEvaluatedList = satisfactionServic.searchByBeEvaIdProId(userId,id);
		model.addAttribute("myEvaluateList", myEvaluateList);
		model.addAttribute("myEvaluatedList", myEvaluatedList);
        return "satisfaction/satisfactionList";
	}
	@RequestMapping(value = "/editPage/{id}", method = RequestMethod.GET )
	public String editPage(Model model,@PathVariable Long id) {
		Satisfaction satisfaction = satisfactionServic.findOne(id);
		SatisfactionBo satisfactionBo = new SatisfactionBo();
		CloneUtils.cloneObject(satisfaction, satisfactionBo);
		satisfactionBo.setScoreLimit(Double.parseDouble(String.valueOf(propertiesService.SATISFACTION_SCORE)));
		model.addAttribute("satisfaction",satisfaction);
        return "satisfaction/satisfactionEdit";
	}
	@RequestMapping(value = "/edit", method = RequestMethod.POST)
	public String editPage(Model model,Satisfaction satisfaction) {
		satisfaction.setEvaluatedTime(new Date());
		 satisfactionServic.update(satisfaction);
        return "redirect:list/"+satisfaction.getProjectId();
	}
	/**时间自动格式化
	    * @author xieang
	    * 2015年9月15日
	    * @param bin
	    */
	  @InitBinder
	   public void InitBinder(ServletRequestDataBinder bin) {
	       bin.registerCustomEditor(Date.class, new CustomDateEditor( new SimpleDateFormat("yyyy-MM-dd HH:mm:ss"), true));
	   }
}
