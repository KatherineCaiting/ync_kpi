package com.ync365.oa.service.project;

 
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Predicate;
import javax.persistence.criteria.Root;

import org.apache.commons.lang3.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.jpa.domain.Specification;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

import com.ync365.oa.bo.EfficiencyProjectBo;
import com.ync365.oa.entity.Efficiency;
import com.ync365.oa.entity.Project;
import com.ync365.oa.query.ProjectQuery;
import com.ync365.oa.repository.EfficiencyDao;
import com.ync365.oa.repository.ProjectDao;

@Component
@Transactional
public class ProjectService {
    
    private static Logger logger = LoggerFactory.getLogger(ProjectService.class);
    
    @Autowired
    private ProjectDao projectDao;
    
    @Autowired
    private EfficiencyDao efficiencyDao;

    public Project findById(int proId) {
        return projectDao.findOne( new Long(proId));
    }
    
    /*
     * 查看项目列表
     * */
    public List<Project> find(final ProjectQuery p){
    	Specification<Project> sp=new Specification<Project>() {
			@Override
			public Predicate toPredicate(Root<Project> root,
					CriteriaQuery<?> query, CriteriaBuilder cb) {
				// TODO Auto-generated method stub
				List<Predicate> list =new ArrayList<>();
				if(p.getId()!=null){
					list.add(cb.equal(root.get("id").as(Long.class), p.getId()));
				}
				if(StringUtils.isNotEmpty(p.getName())){
					list.add(cb.equal(root.get("name").as(String.class), p.getName()));
				}
				if(StringUtils.isNotEmpty(p.getPm())){
					list.add(cb.equal(root.get("pm").as(String.class), p.getPm()));
				}
				if(p.getState()!=null){
					list.add(cb.equal(root.get("state").as(Integer.class), p.getState()));
				}
				if(p.getProjectBeginTime()!=null){
					list.add(cb.equal(root.get("projectBeginTime").as(Date.class), p.getProjectBeginTime()));
				}
				if(p.getProjectEndTime()!=null){
					list.add(cb.equal(root.get("projectEndTime").as(Date.class), p.getProjectEndTime()));
				}
				
				
				Predicate[] ps= new Predicate[list.size()];
				query.where(cb.and(list.toArray(ps)));
				if (StringUtils.isNotEmpty(p.getSort())) {
                    query.orderBy(cb.desc(root.get(p.getSort())));
                }
				return query.getGroupRestriction();
			}
		};
		List<Project> plist =projectDao.findAll(sp);
		if(StringUtils.isNotEmpty(p.getProjectPersonnel())){
			List<Project> list=new ArrayList<Project>();
			for(Project project:plist){
				String[]  strs=project.getProjectPersonnel().split(",");
				for(String s:strs){
					if(s.equals(p.getProjectPersonnel())){
						list.add(project);
						break;
					}
				}
			}
			return list;
		}else{
			return plist;
		}
    }
    public List<Project> findAll() {
        return  (List<Project>) projectDao.findAll();
    }

    /**
     * 项目管理
     * @return
     */
    public List<EfficiencyProjectBo> findAllPro() {
        int a = 0;
        int b = 0;
        int c = 0;
        
        List<EfficiencyProjectBo> list_eff_pro= new  ArrayList<EfficiencyProjectBo>();
        
        List<Project> pro_list = (List<Project>) projectDao.findAll();
        List<Efficiency> eff_list = null;
        if(null != pro_list && pro_list.size() > 0){
            for(Project t_pro: pro_list){
                EfficiencyProjectBo eff_pro = new EfficiencyProjectBo();
                /**beging*/
                if(null != t_pro && null != t_pro.getId()){
                    
                    eff_list = (List<Efficiency>) efficiencyDao.findByProjectId(t_pro.getId().intValue());
                    if(null != eff_list && eff_list.size() > 0){
                        for(Efficiency temp : eff_list){
                            if(null != temp.getPlanHours()){
                                a+=temp.getPlanHours();
                            }
                            if(null != temp.getActualHours()){
                                b+=temp.getActualHours();
                            }
                            if(null != temp.getOutputHours()){
                                c+=temp.getOutputHours();
                            }
                        }
                    }
                }
                /**结束*/
                
                eff_pro.setActualHoursAll(b);
                eff_pro.setPlanHoursAll(a);
                eff_pro.setOutputHoursAll(c);
                eff_pro.setName(t_pro.getName());
                eff_pro.setPm(t_pro.getPm());
                eff_pro.setProjectPersonnel(t_pro.getProjectPersonnel());
                eff_pro.setState(t_pro.getState());
                eff_pro.setProId(t_pro.getId());
                eff_pro.setPlanBeginTime(t_pro.getProjectBeginTime());
                eff_pro.setPlanEndTime(t_pro.getProjectEndTime());
                
                list_eff_pro.add(eff_pro);
            }
        }
        return list_eff_pro;
    }

    public EfficiencyProjectBo findEfficiencyProjectByProId(Long proId) {
        int a = 0;
        int b = 0;
        int c = 0;
        EfficiencyProjectBo eff_pro = new EfficiencyProjectBo();
        Project pro = (Project) projectDao.findOne(proId);
        List<Efficiency> eff_list = null;
        /**beging*/
        if(null != pro && null != pro.getId()){
            eff_list = (List<Efficiency>) efficiencyDao.findByProjectId(proId.intValue());
            if(null != eff_list && eff_list.size() > 0){
                for(Efficiency temp : eff_list){
                    if(null != temp.getPlanHours()){
                        a+=temp.getPlanHours();
                    }
                    if(null != temp.getActualHours()){
                        b+=temp.getActualHours();
                    }
                    if(null != temp.getOutputHours()){
                        c+=temp.getOutputHours();
                    }
                }
            }
        }
        /**结束*/
        eff_pro.setActualHoursAll(b);
        eff_pro.setPlanHoursAll(a);
        eff_pro.setOutputHoursAll(c);
        eff_pro.setName(pro.getName());
        eff_pro.setPm(pro.getPm());
        eff_pro.setProjectPersonnel(pro.getProjectPersonnel());
        eff_pro.setState(pro.getState());
        eff_pro.setProId(pro.getId());
        
        return eff_pro;
    }
    
}
