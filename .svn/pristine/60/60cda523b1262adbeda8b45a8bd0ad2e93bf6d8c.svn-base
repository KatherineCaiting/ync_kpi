package com.ync365.oa.service.leaderAssessment;

import java.util.Map;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Sort;
import org.springframework.data.domain.Sort.Direction;
import org.springframework.data.jpa.domain.Specification;
import org.springframework.stereotype.Service;
import org.springside.modules.persistence.DynamicSpecifications;
import org.springside.modules.persistence.SearchFilter;

import com.ync365.oa.entity.LeaderAssessment;
import com.ync365.oa.repository.LeaderAssessmentDao;

@Service
@Transactional
public class LeaderAssessmentService {
	
	@Autowired
	private LeaderAssessmentDao assessmentDao;
	
	//根据id查询
	public LeaderAssessment selectById(long id) {
		LeaderAssessment assessment = assessmentDao.findOne(id);
		return assessment;
	}
	
	//保存
	public void save(LeaderAssessment assessment) {
		assessmentDao.save(assessment);
	}
	
	//删除
	public void delete(long id) {
		assessmentDao.delete(id);
	}
	
	public void update(LeaderAssessment assessment) {
		
	}
	
	//根据条件分页查询
	public Page<LeaderAssessment> getList(Long userId, Map<String, Object> searchParams, int pageNumber, int pageSize,
			String sortType) {
		PageRequest pageRequest = buildPageRequest(pageNumber, pageSize, sortType);
		Specification<LeaderAssessment> spec = buildSpecification(userId, searchParams);

		return assessmentDao.findAll(spec, pageRequest);
	}

	/**
	 * 创建分页请求.
	 */
	private PageRequest buildPageRequest(int pageNumber, int pagzSize, String sortType) {
		Sort sort = null;
		if ("auto".equals(sortType)) {
			sort = new Sort(Direction.ASC, "id");
		} else if ("title".equals(sortType)) {
			sort = new Sort(Direction.ASC, "title");
		}

		return new PageRequest(pageNumber - 1, pagzSize, sort);
	}

	/**
	 * 创建动态查询条件组合.
	 */
	private Specification<LeaderAssessment> buildSpecification(Long userId, Map<String, Object> searchParams) {
		Map<String, SearchFilter> filters = SearchFilter.parse(searchParams);
		//filters.put("id", new SearchFilter("id", Operator.EQ, userId));
		Specification<LeaderAssessment> spec = DynamicSpecifications.bySearchFilter(filters.values(), LeaderAssessment.class);
		return spec;
	}

}
