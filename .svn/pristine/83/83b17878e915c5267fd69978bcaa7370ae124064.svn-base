package com.ync365.oa.web.specialty;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ync365.oa.bo.SpecialtyVo;
import com.ync365.oa.entity.Department;
import com.ync365.oa.entity.Specialty;
import com.ync365.oa.query.SpecialtyQuery;
import com.ync365.oa.service.department.DepartmentService;
import com.ync365.oa.service.specialty.SpecialtyService;

/**
 * 专业性----后台控制层
 * @author lyh
 *
 */
@Controller
@RequestMapping(value = "/admin/specialty")
public class SpecialtyController {
	@Autowired
	private SpecialtyService specialtyService;
	@Autowired
	private DepartmentService departmentService;
	
	/**
	 * 所有部门的专业性列表
	 * @param model
	 * @return
	 */
	@RequestMapping(value = "/list")
	public String list(Model model) {
		List<Specialty> specialtyList = specialtyService.getAllSpecialty();
		List<Department> departmentList = departmentService.getAll();
		model.addAttribute("specialtyList", specialtyList);
		model.addAttribute("departmentList", departmentList);
		return "specialty/list";
	}
	
	/**
	 * 多条件组合查询某个部门的专业性
	 * @param specialty
	 * @param model
	 * @return
	 */
	@RequestMapping(value = "/query")
	public String list(SpecialtyQuery specialty,Model model) {
		List<Specialty> specialtyList = specialtyService.getSpecialtyByMultiple(specialty);
		List<Department> departmentList = departmentService.getAll();
		model.addAttribute("specialtyList", specialtyList);
		model.addAttribute("departmentList", departmentList);		
		model.addAttribute("departmentId", specialty.getDepartmentId());
		return "specialty/list";
	}	
	
	/**
	 * 弹窗----添加专业性
	 * @return
	 */
	@RequestMapping(value = "/addPage",method = RequestMethod.GET)
    public String addPage(Model model) {
		List<Department> departmentList = departmentService.getAll();		
		model.addAttribute("departmentList", departmentList);	
        return "specialty/add";
    }
	/**
	 * 异步获取部门负责人
	 * @param model
	 * @param departmentId
	 * @return
	 */
	@RequestMapping(value = "/getMt",method = RequestMethod.GET)
	@ResponseBody
	public Department getMt(Model model,Long departmentId) {		
		Department department = departmentService.findOne(departmentId);		
		model.addAttribute("department", department);		
		return department;
	}
	/**
	 * 添加专业性
	 * @return
	 */
	@RequestMapping(value = "/add",method = RequestMethod.POST)	
	@ResponseBody
    public String add(SpecialtyVo specialtyVo) {
		String result = "";
		try {
			specialtyService.addSpecialty(specialtyVo);
			result = "OK";
		} catch (Exception e) {	
			result = "Failed";
			e.printStackTrace();
		}
        return result;
    }
	
	/**
	 * 弹窗----删除专业性
	 * @return
	 */
	@RequestMapping(value = "/deletePage",method = RequestMethod.GET)
	public String deletePage(Long specialtyId,Model model) {
		Specialty specialty = specialtyService.getSpecialtyById(specialtyId);		
		model.addAttribute("specialty", specialty);
		return "specialty/delete";
	}	
	
	/**
	 * 删除专业性
	 * @return
	 */
	@RequestMapping(value = "/delete")
	@ResponseBody
	public String delete(Long specialtyId) {
		String result = "";
		try {
			specialtyService.deleteSpecialty(specialtyId);
			result = "OK";
		} catch (Exception e) {	
			result = "Failed";
			e.printStackTrace();
		}
        return result;		
	}
	
}
